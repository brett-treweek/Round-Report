{"version":3,"sources":["utils/GobalState.js","components/Theme.js","components/Map/map.js","utils/auth.js","utils/queries.js","pages/Home/Home.js","pages/RoundReport/RoundReport.js","utils/mutations.js","components/Search/Search.js","pages/CreateHazard/CreateHazard.js","components/Navbar/Links.js","components/Navbar/Mobile/MobNav.js","components/Navbar/Desktop/DeskNav.js","components/Header/Header.js","components/Footer/Footer.js","components/Form/Input.js","components/Form/Signup.js","pages/SignIn/SignIn.js","App.js","index.js"],"names":["initialState","lat","lng","Context","React","createContext","Store","children","useState","coords","setCoords","Provider","value","theme","containerStyle","width","height","center","libs","process","key","mapTheme","Map","props","useLoadScript","googleMapsApiKey","libraries","isLoaded","loadError","selected","setSelected","mapRef","useRef","onMapLoad","useCallback","map","current","className","mapContainerStyle","zoom","options","styles","onLoad","hazardData","marker","position","icon","url","scaledSize","window","google","maps","Size","onClick","_id","onCloseClick","console","log","hazardType","address","roundNumber","message","memo","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","QUERY_HAZARDS","gql","Home","useQuery","loading","data","error","getAllHazards","style","backgroundImage","backgroundPosition","backgroundSize","Auth","loggedIn","id","RoundReport","LOGIN","ADD_USER","ADD_HAZARD","Search","usePlacesAutocomplete","requestOptions","radius","ready","suggestions","status","setValue","clearSuggestions","useContext","onSelect","a","getGeocode","results","formatted_address","getLatLng","onChange","e","target","disabled","placeholder","place_id","description","initialHazardState","CreateHazard","setHazardData","useMutation","addHazard","handleSubmit","preventDefault","userDeets","JSON","parse","variables","parseInt","user","handleChange","name","onSubmit","htmlFor","type","min","max","cols","rows","Links","exact","to","activeClassName","isMobile","closeNav","logout","Navbar","showMenu","setShowMenu","hamburger","faBars","closeHamburger","faTimes","DeskNav","Header","MobNav","Footer","Input","label","autoFocus","autoComplete","initialSignupState","firstName","lastName","email","password","confirmPassword","initialLoginState","Signup","signupData","setSignupData","loginData","setLoginData","login","addUser","isSignup","setIsSignup","mutationResponse","stringify","bbbbb","handleSignup","handleLogin","autocomplete","prevIsSignup","SignIn","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.526a769a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst initialState = {\n  lat: 21,\n  lng: 22\n}\n\nexport const Context = React.createContext();\n\n// export function getState() {\n//   return localStorage.getItem('state')\n// }\n\n// export function removeState() {\n//   return localStorage.removeItem('state')\n// }\n\nconst Store = ({ children }) => {\n  const [coords, setCoords] = useState(initialState);\n  // localStorage.setItem('state', state.loggedIn)\n\n  return (\n    <Context.Provider value={[coords, setCoords]}>{children}</Context.Provider>\n  )\n\n};\n\nexport default Store;","function theme(){\nreturn(\n    [\n        {\n            \"stylers\": [\n                {\n                    \"hue\": \"#2c3e50\"\n                },\n                {\n                    \"saturation\": 250\n                }\n            ]\n        },\n        {\n            \"featureType\": \"road\",\n            \"elementType\": \"geometry\",\n            \"stylers\": [\n                {\n                    \"lightness\": 50\n                },\n                {\n                    \"visibility\": \"simplified\"\n                }\n            ]\n        },\n        {\n            \"featureType\": \"road\",\n            \"elementType\": \"labels\",\n            \"stylers\": [\n                {\n                    \"visibility\": \"off\"\n                }\n            ]\n        }\n    ]\n)\n} \nexport default theme\n","import React from \"react\";\nimport \"./Map.css\";\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport theme from \"../Theme\";\n// require(\"default-passive-events\");\n\nconst containerStyle = {\n  width: \"100%\",\n  height: \"100%\",\n};\n\nconst center = {\n  lat: -32.03784,\n  lng: 115.80174,\n};\nconst libs = [process.env.REACT_APP_LIBRARIES];\nconst key = [process.env.REACT_APP_GOOGLE_API_KEY];\nconst mapTheme = theme;\n\nfunction Map(props) {\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: key,\n    libraries: libs,\n  });\n  const [selected, setSelected] = React.useState(null);\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  if (loadError) return <p>\"error loading google script\"</p>;\n  if (!isLoaded) return <p>\"Loading...\"</p>;\n\n  return (\n    <div className=\"map\">\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={13.5}\n        options={{ styles: mapTheme }}\n        onLoad={onMapLoad}\n      >\n        {props &&\n          props.hazardData.map((marker) => (\n            <Marker\n              key={marker._id}\n              position={{ lat: marker.lat, lng: marker.lng }}\n              icon={{\n                url: \"./icons/dog.png\",\n                scaledSize: new window.google.maps.Size(25, 25),\n              }}\n              onClick={() => {\n                setSelected(marker);\n              }}\n            />\n          ))}\n\n        {selected ? (\n          <InfoWindow\n            position={{ lat: selected.lat, lng: selected.lng }}\n            onCloseClick={() => {\n              console.log(selected);\n              setSelected(null);\n            }}\n          >\n            <div>\n              <h3>{selected.hazardType}</h3>\n              <p className=\"infoP\">{selected.address}</p>\n              <p className=\"infoP\">Round Number: {selected.roundNumber}</p>\n              <p className=\"infoP\">{selected.message}</p>\n            </div>\n          </InfoWindow>\n        ) : null}\n      </GoogleMap>\n    </div>\n  );\n}\n\nexport default React.memo(Map);\n","import decode from 'jwt-decode';\n\n\nclass AuthService {\n  \n\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('state')\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import { gql } from '@apollo/client';\n\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      _id\n      firstName\n      lastName\n      email\n    }\n  }\n`;\nexport const QUERY_ROUND = gql`\n  {\n    getOneRound {\n    _id\n    roundNumber\n    startAddress\n    lpo\n    hazards{\n      _id\n      hazardType\n      address\n      message\n    }\n  }\n}\n`;\n\nexport const QUERY_HAZARDS = gql`\n{\n  getAllHazards {\n    _id\n    hazardType\n    roundNumber\n    round{\n      startAddress\n      lpo\n    }\n    address\n    message\n    lat\n    lng\n    user{\n      _id\n    }\n  }\n}\n\n`","// import { Fragment } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport Map from \"../../components/Map/map\";\nimport Auth from \"../../utils/auth\";\nimport \"./Home.css\";\nimport { QUERY_HAZARDS } from \"../../utils/queries\";\nimport { useQuery } from \"@apollo/client\";\n// import CreateHazard from \"../../pages/CreateHazard/CreateHazard\";\n\nconst Home = () => {\n  const { loading, data, error } = useQuery(QUERY_HAZARDS);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>error fetching hazards {error}</p>;\n  console.log(\"data:\", data);\n  const hazardData = data.getAllHazards;\n  console.log(\"hazard data:\", hazardData);\n\n  return (\n    <div className=\"homeContainer\" style={{backgroundImage: \"url(./icons/blueAus.PNG)\", backgroundPosition: \"center\", backgroundSize:\"cover\"}}>\n      <div className=\"mapContainer\">\n        <Map hazardData={hazardData} />\n      {Auth.loggedIn() ? <div></div>: <p id=\"prompt\">Please log in to add hazards</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import './RoundReport.css'\n\nconst RoundReport = () => {\n    return ( <div className=\"roundContainer\" style={{backgroundImage: \"url(./icons/redCity.PNG)\", backgroundPosition: \"right center\", backgroundSize:\"cover\"}}>\n        <h1>Round Report</h1>\n    </div> );\n}\n \nexport default RoundReport;","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        firstName\n        lastName\n        email\n        _id\n      }\n    }\n  }\n`;\n\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        firstName\n        lastName\n        email\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_HAZARD = gql`\n  mutation addHazard(\n    $roundNumber: Int!\n    $hazardType: String!\n    $message: String\n    $address: String!\n    $lat: Float!\n    $lng: Float!\n    $user: ID!\n  ) {\n    addHazard(\n      roundNumber: $roundNumber\n      hazardType: $hazardType\n      message: $message\n      address: $address\n      lat: $lat\n      lng: $lng\n      user: $user\n    ){\n      _id\n      roundNumber\n      hazardType\n      message\n      address\n      lat\n      lng\n      user{\n        _id\n      }\n    }\n  }\n\n\n`;","import React, {useContext} from \"react\";\nimport { Context } from \"../../utils/GobalState\"\nimport usePlacesAutocomplete, {\n    getGeocode,\n    getLatLng,\n  } from \"use-places-autocomplete\";\n  import {\n    Combobox,\n    ComboboxInput,\n    ComboboxPopover,\n    // ComboboxList,\n    ComboboxOption,\n  } from \"@reach/combobox\";\n  import \"@reach/combobox/styles.css\";\n  // require('default-passive-events');\n\nfunction Search() {\n    \n    const {\n      ready,\n      value,\n      suggestions: { status, data },\n      setValue,\n      clearSuggestions,\n    } = usePlacesAutocomplete({\n      requestOptions: {\n        location: { lat: () => -32.03784, lng: () => 115.80174 },\n        radius: 5000,\n      },\n    });\n  \n    // console.log(\"autocomplete ready:\", ready);\n    const [ coords, setCoords] = useContext(Context);\n    return (\n      <Combobox\n        onSelect={async (address) => {\n          setValue(address, false)\n          clearSuggestions()\n          try {\n            const results = await getGeocode({ address });\n            console.log(results);\n            const location = results[0].formatted_address;\n            const { lat, lng } = await getLatLng(results[0]);\n            console.log(lat, lng);\n            const data = {\n              lat: lat,\n              lng: lng,\n              address: location\n            }\n            setCoords(data)\n            \n          } catch (error) {\n            console.log(\"autocomplete error\", error);\n          }\n          // console.log(coords);\n        }}\n      >\n        <ComboboxInput\n          className=\"searchBox\"\n          value={value}\n          onChange={(e) => {\n            setValue(e.target.value);\n          }}\n          disabled={!ready}\n          placeholder=\"Enter an address\"\n        />\n        <ComboboxPopover>\n          {status === \"OK\" &&\n            data.map(({ place_id, description }) => (\n              <ComboboxOption key={place_id} value={description} />\n            ))}\n        </ComboboxPopover>\n      </Combobox>\n    );\n  }\n\n  export default Search;","import React, { useState, useContext } from \"react\";\nimport { Context } from \"../../utils/GobalState\";\nimport { ADD_HAZARD } from \"../../utils/mutations\";\nimport { useMutation } from \"@apollo/client\";\nimport \"./CreateHazard.css\";\nimport Search from \"../../components/Search/Search\";\nimport { useLoadScript } from \"@react-google-maps/api\";\n// require(\"default-passive-events\");\n\nlet initialHazardState = {\n  roundNumber: \"\",\n  hazardType: \"\",\n  location: \"\",\n  message: \"\",\n};\nconst libs = [process.env.REACT_APP_LIBRARIES];\nconst key = [process.env.REACT_APP_GOOGLE_API_KEY];\n\nfunction CreateHazard(props) {\n  const [coords, setCoords] = useContext(Context);\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: key,\n    libraries: libs,\n  });\n\n  console.log(\"coords data:\", coords);\n  const [hazardData, setHazardData] = useState(initialHazardState);\n  const [addHazard] = useMutation(ADD_HAZARD);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    console.log(\"hazard form data:\", hazardData);\n    const data = localStorage.getItem('deets')\n    const userDeets = JSON.parse(data)\n    console.log(\"createHazard userdeets\",userDeets);\n    try {\n      const { data } = await addHazard({\n        variables: {\n          roundNumber: parseInt(hazardData.roundNumber),\n          hazardType: hazardData.hazardType,\n          address: coords.address,\n          lat: coords.lat,\n          lng: coords.lng,\n          message: hazardData.message,\n          user: userDeets._id,\n        },\n      });\n      console.log(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleChange = (e) => {\n    setHazardData({ ...hazardData, [e.target.name]: e.target.value });\n  };\n  if (loadError) return <p>\"error loading google script\"</p>;\n  if (!isLoaded) return <p>\"Loading...\"</p>;\n\n  return (\n    <div\n      className=\"createHazardContainer\"\n      style={{\n        backgroundImage: \"url(./icons/blueNightCity.PNG)\",\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n      }}\n    >\n      <div className=\"formContainer\">\n        <form className=\"form\" onSubmit={handleSubmit}>\n          <p className=\"label\">Enter Address of Hazard</p>\n          <Search />\n          <label className=\"label\" htmlFor=\"rndNum\">\n            Round Number\n          </label>\n          <input\n            name=\"roundNumber\"\n            onChange={handleChange}\n            className=\"input\"\n            type=\"number\"\n            id=\"rndNum\"\n            min=\"1\"\n            max=\"100\"\n            placeholder=\"Please enter the Round Number \"\n          />\n\n          <label className=\"label\" htmlFor=\"hazardType\">\n            Hazard Type\n          </label>\n          <select\n            className=\"select\"\n            name=\"hazardType\"\n            id=\"hazardType\"\n            onChange={handleChange}\n          >\n            <option value=\"\">--Please choose a hazard type--</option>\n            <option value=\"Aggresive Dog\">Aggresive Dog</option>\n            <option value=\"Aggresive Magpie\">Aggresive Magpie</option>\n            <option value=\"Blind Driveway\">Blind Driveway</option>\n            <option value=\"Slippery Surface\">Slippery Surface</option>\n            <option value=\"School\">School</option>\n            <option value=\"Intersection\">Intersection</option>\n            <option value=\"Roadworks\">Roadworks</option>\n            <option value=\"Missing Letterbox\">Missing Letterbox</option>\n            <option value=\"Aggresive Human\">Aggresive Human</option>\n            <option value=\"Other\">Other</option>\n          </select>\n\n          <label className=\"label\" htmlFor=\"message\">\n            Message\n          </label>\n          <textarea\n            name=\"message\"\n            onChange={handleChange}\n            className=\"textArea\"\n            type=\"text\"\n            id=\"message\"\n            cols=\"20\"\n            rows=\"5\"\n            placeholder=\"Add Notes\"\n          />\n\n          <button className=\"button\" type=\"submit\">\n            Submit\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateHazard;\n","import { NavLink } from \"react-router-dom\";\nimport \"./Nav.css\";\nimport Auth from \"../../utils/auth\";\n\nconst Links = (props) => {\n\n  const signOut = () => {\n    Auth.logout()\n  }\n\n  return (\n    <nav className=\"navLinks\">\n      <NavLink\n        exact\n        to=\"/\"\n        className=\"links\"\n        activeClassName=\"selected\"\n        onClick={() => props.isMobile && props.closeNav()}\n      >\n        Home\n      </NavLink>\n      {Auth.loggedIn() ? (\n        <NavLink\n        exact\n        to=\"/create-hazard\"\n        activeClassName=\"selected\"\n        className=\"links\"\n        onClick={() => props.isMobile && props.closeNav()}\n      >\n        Add Hazard\n      </NavLink>\n        \n      ) : (\n        null\n      )}\n      <NavLink\n        exact\n        to=\"/round-report\"\n        activeClassName=\"selected\"\n        className=\"links\"\n        onClick={() => props.isMobile && props.closeNav()}\n      >\n        Round Report\n      </NavLink>\n      {Auth.loggedIn() ? (\n        <button className=\"links\" id=\"signBtn\" onClick={signOut}>Sign Out</button>\n      ) : (\n        <NavLink\n          exact\n          to=\"/signIn\"\n          activeClassName=\"selected\"\n          className=\"links\"\n          onClick={() => props.isMobile && props.closeNav()}\n        >\n          Sign In\n        </NavLink>\n      )}\n    </nav>\n  );\n};\n\nexport default Links;\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../Nav.css\";\nimport Links from \"../Links\";\n\nconst Navbar = () => {\n  const [showMenu, setShowMenu] = useState(false);\n\n  const hamburger = <FontAwesomeIcon className=\"icon\" icon={faBars} onClick={() => setShowMenu(!showMenu)} />\n\n  const closeHamburger = <FontAwesomeIcon className=\"icon\" icon={faTimes} onClick={() => setShowMenu(false)} />\n\n  const closeNav = () => setShowMenu(false)\n\n  return (\n    <div className=\"mobNav\">\n      {showMenu ? closeHamburger : hamburger}\n      {showMenu && <Links isMobile={true} closeNav={closeNav}/>}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import Links from \"../Links\";\nimport '../Nav.css'\n\nconst DeskNav = () => {\n    return ( \n        <nav className='deskNav'>\n            <Links isMobile={false}/>\n        </nav>\n     );\n}\n \nexport default DeskNav;","import MobNav from \"../Navbar/Mobile/MobNav\"\nimport DeskNav from \"../Navbar/Desktop/DeskNav\";\nimport './Header.css'\n\nconst Header = () => {\n    return ( \n        <div className='header'>\n            <p className=\"logo\">RR</p>\n            <div className=\"navContainer\">\n                <DeskNav/>\n                <MobNav/>   \n            </div>\n            \n        </div>\n     );\n}\n \nexport default Header;\n","import \"./Footer.css\";\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faGithub } from '@fortawesome/free-solid-svg-icons'\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <p className=\"label\">Created by BT</p>\n      {/* <a\n        href=\"https://github.com/brett-treweek\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <FontAwesomeIcon icon={\"fab\", faGithub}/>\n      </a> */}\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport './Form.css'\n\nconst Input = ({\n  type,\n  label,\n  placeholder,\n  handleChange,\n  autoFocus,\n}) => {\n  return (\n    <div className=\"loginWrapper\">\n      <label htmlFor={label} className=\"loginLabel\">{placeholder}</label>\n      <input\n        className=\"loginInput\"\n        placeholder={placeholder}\n        name={label}\n        type={type}\n        id={label}\n        onChange={handleChange}\n        autoFocus={autoFocus}\n        autoComplete={type}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useState } from \"react\";\nimport Input from \"./Input\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN, ADD_USER } from \"../../utils/mutations\";\nimport Auth from \"../../utils/auth\";\nimport './Form.css'\n\n// import { Context } from '../../utils/GobalState'\n\n\nlet initialSignupState = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\nlet initialLoginState = {\n  email: \"\",\n  password: \"\",\n};\n\nfunction Signup(props) {\n  const [signupData, setSignupData] = useState(initialSignupState);\n  const [loginData, setLoginData] = useState(initialLoginState);\n  const [login, {error}] = useMutation(LOGIN);\n  const [addUser] = useMutation(ADD_USER);\n  const [isSignup, setIsSignup] = useState(false);\n  // const [state, setState] = useContext(Context)\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    console.log(signupData, loginData);\n    if (isSignup) {\n      try {\n        const mutationResponse = await addUser({\n          variables: {\n            email: signupData.email,\n            password: signupData.password,\n            firstName: signupData.firstName,\n            lastName: signupData.lastName,\n          },\n        }); \n        const userDeets = mutationResponse.data.addUser.user\n        localStorage.setItem('deets', JSON.stringify(userDeets));       \n        const token = mutationResponse.data.addUser.token;\n        Auth.login(token);\n        // set state to loggedIn = 'true'\n        // setState({loggedIn: 'true'})\n        // localStorage.setItem('state', state);\n        // console.log('State:', state);\n      } catch (error) {\n        console.log(\"error signing up:\", error);\n      }\n    } else {\n      try {\n        const mutationResponse = await login({\n          variables: {\n            email: loginData.email,\n            password: loginData.password,\n          },\n        });\n        console.log(\"MutationResponse:\", mutationResponse.data.login.user._id);\n        const token = mutationResponse.data.login.token;\n        Auth.login(token);\n        const userDeets = mutationResponse.data.login.user\n        localStorage.setItem('deets', JSON.stringify(userDeets));\n        // console.log(\"User Deets:\",mutationResponse.data.login.user);\n        const bbbbb = localStorage.getItem('deets')\n        console.log('local storage deets:', JSON.parse(bbbbb));\n      } catch (error) {\n        console.log(\"Login Failed:\",error);\n      }\n    }\n  };\n\n  const handleSignup = (e) => {\n    setSignupData({ ...signupData, [e.target.name]: e.target.value });\n  };\n  const handleLogin = (e) => {\n    setLoginData({ ...loginData, [e.target.name]: e.target.value });\n  };\n\n  const switchSign = () => {\n    setIsSignup((prevIsSignup) => !prevIsSignup);\n  };\n\n  return (\n    <div className=\"loginContainer\" style={{backgroundImage: \"url(./icons/purpleCity.PNG)\", backgroundPosition: \"right center\", backgroundSize:\"cover\"}}>\n      <h1 className=\"loginTitle\">{isSignup ? \"Sign Up\" : \"Sign In\"}</h1>\n      <form onSubmit={handleSubmit} className=\"loginForm\">\n        {isSignup && (\n          <>\n            <Input\n              placeholder=\"First Name\"\n              handleChange={isSignup ? handleSignup : handleLogin}\n              autoFocus\n              label=\"firstName\"\n              type=\"firstName\"\n            />\n            <Input\n              placeholder=\"Last Name\"\n              handleChange={isSignup ? handleSignup : handleLogin}\n              label=\"lastName\"\n              type=\"lastName\"\n            />\n          </>\n        )}\n\n        <Input\n          placeholder=\"Email Address\"\n          handleChange={isSignup ? handleSignup : handleLogin}\n          label=\"email\"\n          type=\"email\"\n        />\n        <Input\n          placeholder=\"Password\"\n          handleChange={isSignup ? handleSignup : handleLogin}\n          label=\"password\"\n          type=\"password\"\n          autocomplete=\"password\" \n        />\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        {isSignup && (\n          <Input\n            placeholder=\"Repeat Password\"\n            handleChange={isSignup ? handleSignup : handleLogin}\n            label=\"password\"\n            type=\"password\"\n            autocomplete=\"new-password\"\n          />\n        )}\n        <button type=\"submit\" className=\"button\">\n          {isSignup ? \"Sign Up\" : \"Sign In\"}\n        </button>\n        <button onClick={switchSign} type=\"button\" className=\"button\">\n          {isSignup ? \"Already have an account? Sign In\" : \"Create Account\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import { Fragment } from \"react\";\r\nimport Signup from \"../../components/Form/Signup\";\r\nimport \"./SignIn.css\";\r\n\r\nconst SignIn = () => {\r\n  return (\r\n    <Fragment>\r\n      <Signup />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport Store from \"./utils/GobalState\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport Home from \"./pages/Home/Home\";\nimport RoundReport from \"./pages/RoundReport/RoundReport\";\nimport CreateHazard from \"./pages/CreateHazard/CreateHazard\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport SignIn from \"./pages/SignIn/SignIn\";\n\n// using http link with apollo server\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\nfunction App() {\n\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"App\">\n          <Store>\n            <Header />\n            <div className=\"content\">\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/round-report\" component={RoundReport} />\n                <Route exact path=\"/create-hazard\" component={CreateHazard} />\n                <Route exact path=\"/signIn\" component={SignIn} />\n                \n              </Switch>\n            </div>\n            <Footer />\n          </Store>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}