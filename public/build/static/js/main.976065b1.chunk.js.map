{"version":3,"sources":["utils/GobalState.js","components/Map/map.js","components/Theme.js","utils/auth.js","utils/queries.js","pages/Home/Home.js","components/Report/Report.js","components/RoundSearch/RoundSearch.js","pages/RoundReport/RoundReport.js","utils/mutations.js","components/Search/Search.js","pages/CreateHazard/CreateHazard.js","components/Navbar/Links.js","components/Navbar/Mobile/MobNav.js","components/Navbar/Desktop/DeskNav.js","components/Header/Header.js","components/Footer/Footer.js","components/Form/Input.js","components/Form/Signup.js","pages/SignIn/SignIn.js","App.js","index.js"],"names":["initialState","lat","lng","Context","React","createContext","Store","children","useState","coords","setCoords","Provider","value","containerStyle","width","height","libs","process","key","mapTheme","Map","props","useLoadScript","googleMapsApiKey","libraries","isLoaded","loadError","selected","setSelected","className","mapContainerStyle","center","zoom","options","styles","hazardData","map","marker","position","icon","url","scaledSize","window","google","maps","Size","onClick","_id","onCloseClick","console","log","hazardType","address","roundNumber","message","memo","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","QUERY_ROUND","gql","QUERY_HAZARDS","Home","useQuery","loading","data","error","getAllHazards","Auth","loggedIn","id","Report","roundHazards","hazards","variables","parseInt","roundData","getOneRound","startAddress","lpo","hazard","RoundSearch","requestedRound","setRequestedRound","change","setChange","htmlFor","label","onChange","e","target","type","min","max","placeholder","preventDefault","RoundReport","style","backgroundImage","backgroundPosition","backgroundSize","LOGIN","ADD_USER","ADD_HAZARD","Search","usePlacesAutocomplete","requestOptions","radius","ready","suggestions","status","setValue","clearSuggestions","useContext","onSelect","a","getGeocode","results","formatted_address","getLatLng","disabled","place_id","description","initialHazardState","CreateHazard","setHazardData","useMutation","addHazard","handleSubmit","userDeets","JSON","parse","user","handleChange","name","onSubmit","cols","rows","Links","exact","to","activeClassName","isMobile","closeNav","logout","Navbar","showMenu","setShowMenu","hamburger","faBars","closeHamburger","faTimes","DeskNav","Header","MobNav","Footer","Input","autoFocus","autoComplete","initialSignupState","firstName","lastName","email","password","confirmPassword","initialLoginState","Signup","signupData","setSignupData","loginData","setLoginData","login","addUser","isSignup","setIsSignup","mutationResponse","stringify","bbbbb","handleSignup","handleLogin","autocomplete","prevIsSignup","SignIn","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.976065b1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst initialState = {\n  lat: 21,\n  lng: 22\n}\n\nexport const Context = React.createContext();\n\n// export function getState() {\n//   return localStorage.getItem('state')\n// }\n\n// export function removeState() {\n//   return localStorage.removeItem('state')\n// }\n\nconst Store = ({ children }) => {\n  const [coords, setCoords] = useState(initialState);\n  // localStorage.setItem('state', state.loggedIn)\n\n  return (\n    <Context.Provider value={[coords, setCoords]}>{children}</Context.Provider>\n  )\n\n};\n\nexport default Store;","import React from \"react\";\nimport \"./Map.css\";\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport Theme from \"../Theme\";\nimport icons from '../../utils/icons'\n// require(\"default-passive-events\");\n\nconst containerStyle = {\n  width: \"100%\",\n  height: \"100%\",\n};\n\n// const center = {\n//   lat: -32.03784,\n//   lng: 115.80174,\n// };\nconst libs = [process.env.REACT_APP_LIBRARIES];\nconst key = [process.env.REACT_APP_GOOGLE_API_KEY];\nconst mapTheme = Theme;\n\nfunction Map(props) {\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: key,\n    libraries: libs,\n  });\n  const [selected, setSelected] = React.useState(null);\n  \n  if (loadError) return <p>\"error loading google script\"</p>;\n  if (!isLoaded) return <p>\"Loading...\"</p>;\n\n  return (\n    <div className=\"map\">\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={props.center}\n        zoom={props.zoom}\n        options={{ styles: mapTheme }}\n\n      >\n        {props &&\n          props.hazardData.map((marker) => (\n            <Marker\n              key={marker._id}\n              position={{ lat: marker.lat, lng: marker.lng }}\n              icon={{\n                url: './icons/alert.png',\n                scaledSize: new window.google.maps.Size(25, 25),\n              }}\n              onClick={() => {\n                setSelected(marker);\n              }}\n            />\n          ))}\n\n        {selected ? (\n          <InfoWindow\n            position={{ lat: selected.lat, lng: selected.lng }}\n            onCloseClick={() => {\n              console.log(selected);\n              setSelected(null);\n            }}\n          >\n            <div>\n              <h3>{selected.hazardType}</h3>\n              <p className=\"infoP\">{selected.address}</p>\n              <p className=\"infoP\">Round Number: {selected.roundNumber}</p>\n              <p className=\"infoP\">{selected.message}</p>\n            </div>\n          </InfoWindow>\n        ) : null}\n      </GoogleMap>\n    </div>\n  );\n}\n\nexport default React.memo(Map);\n","export default  \n\n[\n    {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [\n            {\n                \"color\": \"#444444\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"color\": \"#f2f2f2\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"saturation\": -100\n            },\n            {\n                \"lightness\": 45\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"simplified\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"elementType\": \"all\",\n        \"stylers\": [\n            {\n                \"color\": \"#6658a6\"\n            },\n            {\n                \"visibility\": \"on\"\n            }\n        ]\n    }\n]\n\n","import decode from 'jwt-decode';\n\n\nclass AuthService {\n  \n\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('state')\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import { gql } from \"@apollo/client\";\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      _id\n      firstName\n      lastName\n      email\n    }\n  }\n`;\nexport const QUERY_ROUND = gql`\n  query getOneRound($roundNumber: Int!) {\n    getOneRound(roundNumber: $roundNumber) {\n      _id\n      roundNumber\n      startAddress\n      lpo\n      lat\n      lng\n      hazards{\n        _id\n        roundNumber\n        hazardType\n        address\n        message\n        lat\n        lng\n        user {\n          _id\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_HAZARDS = gql`\n  {\n    getAllHazards {\n      _id\n      hazardType\n      roundNumber\n      round {\n        startAddress\n        lpo\n      }\n      address\n      message\n      lat\n      lng\n      user {\n        _id\n      }\n    }\n  }\n`;\n","// import { Fragment } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport Map from \"../../components/Map/map\";\nimport Auth from \"../../utils/auth\";\nimport \"./Home.css\";\nimport { QUERY_HAZARDS } from \"../../utils/queries\";\nimport { useQuery } from \"@apollo/client\";\n// import CreateHazard from \"../../pages/CreateHazard/CreateHazard\";\n\nconst Home = () => {\n  const { loading, data, error } = useQuery(QUERY_HAZARDS);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>error fetching hazards {error}</p>;\n  console.log(\"data:\", data);\n  const hazardData = data.getAllHazards;\n  console.log(\"hazard data:\", hazardData);\n  const latlng = {\n    lat: -32.03784,\n    lng: 115.80174,\n  };\n  const zoom = 13;\n  return (\n    <div className=\"homeContainer\">\n      <div className=\"mapContainer\">\n        <Map hazardData={hazardData} center={latlng} zoom={zoom}/>\n      {Auth.loggedIn() ? <div></div>: <p id=\"prompt\">Sign in to add hazards</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\r\nimport \"./Report.css\";\r\nimport Map from \"../Map/map\";\r\nimport { QUERY_ROUND } from \"../../utils/queries\";\r\nimport { useQuery } from \"@apollo/client\";\r\n\r\nconst Report = (props) => {\r\n  console.log(\"props\", props);\r\n\r\n  const roundHazards = props.hazards;\r\n  console.log(\"round hazard data:\", roundHazards);\r\n\r\n  const { loading, data, error } = useQuery(QUERY_ROUND, {\r\n    variables: {\r\n      roundNumber: parseInt(props.roundData.roundNumber),\r\n    },\r\n  });\r\n  console.log(\"data:\", data);\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>error fetching round data {error}</p>;\r\n\r\n  const roundData = data.getOneRound;\r\n  console.log(\"RRRRRR\", roundData);\r\n  return (\r\n    <div className=\"report\">\r\n      {data && (\r\n        <>\r\n          <h2 className=\"reportTitle\">Round {roundData.roundNumber}</h2>\r\n          <p className=\"genP\">Start Address: {roundData.startAddress}</p>\r\n          <p className=\"genP\">LPO: {roundData.lpo}</p>\r\n          <p className=\"genP\">Depot Bins: {roundData.lpo}</p>\r\n\r\n          <h2 className=\"reportH2\">Hazards</h2>\r\n          <div className=\"hazardCards\">\r\n            {roundData.hazards.map((hazard) => (\r\n              <div className=\"hazardCard\" key={hazard._id}>\r\n                <p className=\"reportP\">{hazard.hazardType}</p>\r\n                <p className=\"reportP\">{hazard.address}</p>\r\n                <p className=\"reportP\">Message: {hazard.message}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"roundMapContainer\">\r\n            <Map\r\n              hazardData={roundData.hazards}\r\n              center={{lat: roundData.lat, lng: roundData.lng}}\r\n              zoom={13}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Report;\r\n","import React, { useState } from \"react\";\r\nimport Report from \"../Report/Report\";\r\nimport \"./RoundSearch.css\";\r\n\r\n\r\nconst RoundSearch = () => {\r\n  const [requestedRound, setRequestedRound] = useState(null);\r\n  const [change, setChange] = useState(null)\r\n \r\n  const handleChange = (e) => {\r\n    setChange({roundNumber: e.target.value});\r\n  };\r\n  \r\n  \r\n\r\n  function handleOnClick(e) {\r\n    setRequestedRound(change)\r\n      e.preventDefault()\r\n  }\r\n  console.log(\"requestedRound:\", requestedRound);\r\n\r\n  return (\r\n    <div className=\"reportContainer\">\r\n      <div className=\"searchContainer\">\r\n        <form className=\"searchForm\">\r\n        <label htmlFor=\"roundNumber\" className=\"label\" id=\"searchLabel\">\r\n            Enter a round number\r\n          </label>\r\n          <input\r\n            label=\"roundNumber\"\r\n            onChange={handleChange}\r\n            type=\"number\"\r\n            className=\"input\"\r\n            id=\"searchInput\"\r\n            min=\"1\"\r\n            max=\"10\"\r\n            placeholder=\"Round Number\"\r\n          />\r\n          <button className=\"button\" id=\"searchBtn\" onClick={handleOnClick}>\r\n            submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n      {requestedRound && <Report roundData={requestedRound} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoundSearch;\r\n\r\n","import \"./RoundReport.css\";\nimport RoundSearch from \"../../components/RoundSearch/RoundSearch\";\n\nconst RoundReport = () => {\n  \n\n  return (\n    <div\n      className=\"roundContainer\"\n      style={{\n        backgroundImage: \"url(./icons/purpleCity.PNG)\",\n        backgroundPosition: \"right center\",\n        backgroundSize: \"cover\",\n      }}\n    >\n      <RoundSearch/>\n      \n    </div>\n  );\n};\n\nexport default RoundReport;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        firstName\n        lastName\n        email\n        _id\n      }\n    }\n  }\n`;\n\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        firstName\n        lastName\n        email\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_HAZARD = gql`\n  mutation addHazard(\n    $roundNumber: Int!\n    $hazardType: String!\n    $message: String\n    $address: String!\n    $lat: Float!\n    $lng: Float!\n    $user: ID!\n  ) {\n    addHazard(\n      roundNumber: $roundNumber\n      hazardType: $hazardType\n      message: $message\n      address: $address\n      lat: $lat\n      lng: $lng\n      user: $user\n    ){\n      _id\n      roundNumber\n      hazardType\n      message\n      address\n      lat\n      lng\n      user{\n        _id\n      }\n    }\n  }\n\n\n`;","import React, {useContext} from \"react\";\nimport { Context } from \"../../utils/GobalState\"\nimport usePlacesAutocomplete, {\n    getGeocode,\n    getLatLng,\n  } from \"use-places-autocomplete\";\n  import {\n    Combobox,\n    ComboboxInput,\n    ComboboxPopover,\n    // ComboboxList,\n    ComboboxOption,\n  } from \"@reach/combobox\";\n  import \"@reach/combobox/styles.css\";\n  // require('default-passive-events');\n\nfunction Search() {\n    \n    const {\n      ready,\n      value,\n      suggestions: { status, data },\n      setValue,\n      clearSuggestions,\n    } = usePlacesAutocomplete({\n      requestOptions: {\n        location: { lat: () => -32.03784, lng: () => 115.80174 },\n        radius: 5000,\n      },\n    });\n  \n    // console.log(\"autocomplete ready:\", ready);\n    const [ coords, setCoords] = useContext(Context);\n    return (\n      <Combobox\n        onSelect={async (address) => {\n          setValue(address, false)\n          clearSuggestions()\n          try {\n            const results = await getGeocode({ address });\n            console.log(results);\n            const location = results[0].formatted_address;\n            const { lat, lng } = await getLatLng(results[0]);\n            console.log(lat, lng);\n            const data = {\n              lat: lat,\n              lng: lng,\n              address: location\n            }\n            setCoords(data)\n            \n          } catch (error) {\n            console.log(\"autocomplete error\", error);\n          }\n          // console.log(coords);\n        }}\n      >\n        <ComboboxInput\n          className=\"searchBox\"\n          value={value}\n          onChange={(e) => {\n            setValue(e.target.value);\n          }}\n          disabled={!ready}\n          placeholder=\"Enter an address\"\n        />\n        <ComboboxPopover>\n          {status === \"OK\" &&\n            data.map(({ place_id, description }) => (\n              <ComboboxOption key={place_id} value={description} />\n            ))}\n        </ComboboxPopover>\n      </Combobox>\n    );\n  }\n\n  export default Search;","import React, { useState, useContext } from \"react\";\nimport { Context } from \"../../utils/GobalState\";\nimport { ADD_HAZARD } from \"../../utils/mutations\";\nimport { useMutation } from \"@apollo/client\";\nimport \"./CreateHazard.css\";\nimport Search from \"../../components/Search/Search\";\nimport { useLoadScript } from \"@react-google-maps/api\";\n// require(\"default-passive-events\");\n\nlet initialHazardState = {\n  roundNumber: \"\",\n  hazardType: \"\",\n  location: \"\",\n  message: \"\",\n};\nconst libs = [process.env.REACT_APP_LIBRARIES];\nconst key = [process.env.REACT_APP_GOOGLE_API_KEY];\n\nfunction CreateHazard(props) {\n  const [coords, setCoords] = useContext(Context);\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: key,\n    libraries: libs,\n  });\n\n  console.log(\"coords data:\", coords);\n  const [hazardData, setHazardData] = useState(initialHazardState);\n  const [addHazard] = useMutation(ADD_HAZARD);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    console.log(\"hazard form data:\", hazardData);\n    const data = localStorage.getItem('deets')\n    const userDeets = JSON.parse(data)\n    console.log(\"createHazard userdeets\",userDeets);\n    try {\n      const { data } = await addHazard({\n        variables: {\n          roundNumber: parseInt(hazardData.roundNumber),\n          hazardType: hazardData.hazardType,\n          address: coords.address,\n          lat: coords.lat,\n          lng: coords.lng,\n          message: hazardData.message,\n          user: userDeets._id,\n        },\n      });\n      window.location.assign('/');\n      console.log(data);\n    } catch (error) {\n      window.location.assign('/');\n      console.error(error);\n    }\n  };\n\n  const handleChange = (e) => {\n    setHazardData({ ...hazardData, [e.target.name]: e.target.value });\n  };\n  if (loadError) return <p>\"error loading google script\"</p>;\n  if (!isLoaded) return <p>\"Loading...\"</p>;\n\n  return (\n    <div\n      className=\"createHazardContainer\"\n      style={{\n        backgroundImage: \"url(./icons/blue.PNG)\",\n        backgroundPosition: \"right center\",\n        backgroundSize: \"cover\",\n      }}\n    >\n      <div className=\"formContainer\">\n        <form className=\"form\" onSubmit={handleSubmit}>\n          <p className=\"label\">Enter Address of Hazard</p>\n          <Search />\n          <label className=\"label\" htmlFor=\"rndNum\">\n            Round Number\n          </label>\n          <input\n            name=\"roundNumber\"\n            onChange={handleChange}\n            className=\"input\"\n            type=\"number\"\n            id=\"rndNum\"\n            min=\"1\"\n            max=\"10\"\n            placeholder=\"Please enter the Round Number \"\n          />\n\n          <label className=\"label\" htmlFor=\"hazardType\">\n            Hazard Type\n          </label>\n          <select\n            className=\"select\"\n            name=\"hazardType\"\n            id=\"hazardType\"\n            onChange={handleChange}\n          >\n            <option value=\"\">--Please choose a hazard type--</option>\n            <option value=\"Aggresive Dog\">Aggresive Dog</option>\n            <option value=\"Aggresive Magpie\">Aggresive Magpie</option>\n            <option value=\"Blind Driveway\">Blind Driveway</option>\n            <option value=\"Slippery Surface\">Slippery Surface</option>\n            <option value=\"School\">School</option>\n            <option value=\"Intersection\">Intersection</option>\n            <option value=\"Roadworks\">Roadworks</option>\n            <option value=\"Missing Letterbox\">Missing Letterbox</option>\n            <option value=\"Aggresive Human\">Aggresive Human</option>\n            <option value=\"Other\">Other</option>\n          </select>\n\n          <label className=\"label\" htmlFor=\"message\">\n            Message\n          </label>\n          <textarea\n            name=\"message\"\n            onChange={handleChange}\n            className=\"textArea\"\n            type=\"text\"\n            id=\"message\"\n            cols=\"20\"\n            rows=\"5\"\n            placeholder=\"Add Notes\"\n          />\n\n          <button className=\"button\" type=\"submit\">\n            Submit\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateHazard;\n","import { NavLink } from \"react-router-dom\";\nimport \"./Nav.css\";\nimport Auth from \"../../utils/auth\";\n\nconst Links = (props) => {\n\n  const signOut = () => {\n    Auth.logout()\n  }\n\n  return (\n    <nav className=\"navLinks\">\n      <NavLink\n        exact\n        to=\"/\"\n        className=\"links\"\n        activeClassName=\"selected\"\n        onClick={() => props.isMobile && props.closeNav()}\n      >\n        Home\n      </NavLink>\n      {Auth.loggedIn() ? (\n        <NavLink\n        exact\n        to=\"/create-hazard\"\n        activeClassName=\"selected\"\n        className=\"links\"\n        onClick={() => props.isMobile && props.closeNav()}\n      >\n        Add Hazard\n      </NavLink>\n        \n      ) : (\n        null\n      )}\n      <NavLink\n        exact\n        to=\"/round-report\"\n        activeClassName=\"selected\"\n        className=\"links\"\n        onClick={() => props.isMobile && props.closeNav()}\n      >\n        Round Report\n      </NavLink>\n      {Auth.loggedIn() ? (\n        <button className=\"links\" id=\"signBtn\" onClick={signOut}>Sign Out</button>\n      ) : (\n        <NavLink\n          exact\n          to=\"/signIn\"\n          activeClassName=\"selected\"\n          className=\"links\"\n          onClick={() => props.isMobile && props.closeNav()}\n        >\n          Sign In\n        </NavLink>\n      )}\n    </nav>\n  );\n};\n\nexport default Links;\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport \"../Nav.css\";\nimport Links from \"../Links\";\n\nconst Navbar = () => {\n  const [showMenu, setShowMenu] = useState(false);\n\n  const hamburger = <FontAwesomeIcon className=\"icon\" icon={faBars} onClick={() => setShowMenu(!showMenu)} />\n\n  const closeHamburger = <FontAwesomeIcon className=\"icon\" icon={faTimes} onClick={() => setShowMenu(false)} />\n\n  const closeNav = () => setShowMenu(false)\n\n  return (\n    <div className=\"mobNav\">\n      {showMenu ? closeHamburger : hamburger}\n      {showMenu && <Links isMobile={true} closeNav={closeNav}/>}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import Links from \"../Links\";\nimport '../Nav.css'\n\nconst DeskNav = () => {\n    return ( \n        <nav className='deskNav'>\n            <Links isMobile={false}/>\n        </nav>\n     );\n}\n \nexport default DeskNav;","import MobNav from \"../Navbar/Mobile/MobNav\"\nimport DeskNav from \"../Navbar/Desktop/DeskNav\";\nimport './Header.css'\n\nconst Header = () => {\n    return ( \n        <div className='header'>\n            <p className=\"logo\">RR</p>\n            <div className=\"navContainer\">\n                <DeskNav/>\n                <MobNav/>   \n            </div>\n            \n        </div>\n     );\n}\n \nexport default Header;\n","import \"./Footer.css\";\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faGithub } from '@fortawesome/free-solid-svg-icons'\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <p className=\"footerP\">Created by BT</p>\n      {/* <a\n        href=\"https://github.com/brett-treweek\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <FontAwesomeIcon icon={\"fab\", faGithub}/>\n      </a> */}\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport './Form.css'\n\nconst Input = ({\n  type,\n  label,\n  placeholder,\n  handleChange,\n  autoFocus,\n}) => {\n  return (\n    <div className=\"loginWrapper\">\n      <label htmlFor={label} className=\"loginLabel\">{placeholder}</label>\n      <input\n        className=\"loginInput\"\n        placeholder={placeholder}\n        name={label}\n        type={type}\n        id={label}\n        onChange={handleChange}\n        autoFocus={autoFocus}\n        autoComplete={type}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { useState } from \"react\";\nimport Input from \"./Input\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN, ADD_USER } from \"../../utils/mutations\";\nimport Auth from \"../../utils/auth\";\nimport './Form.css'\n\n// import { Context } from '../../utils/GobalState'\n\n\nlet initialSignupState = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\nlet initialLoginState = {\n  email: \"\",\n  password: \"\",\n};\n\nfunction Signup(props) {\n  const [signupData, setSignupData] = useState(initialSignupState);\n  const [loginData, setLoginData] = useState(initialLoginState);\n  const [login, {error}] = useMutation(LOGIN);\n  const [addUser] = useMutation(ADD_USER);\n  const [isSignup, setIsSignup] = useState(false);\n  // const [state, setState] = useContext(Context)\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    console.log(signupData, loginData);\n    if (isSignup) {\n      try {\n        const mutationResponse = await addUser({\n          variables: {\n            email: signupData.email,\n            password: signupData.password,\n            firstName: signupData.firstName,\n            lastName: signupData.lastName,\n          },\n        }); \n        const userDeets = mutationResponse.data.addUser.user\n        localStorage.setItem('deets', JSON.stringify(userDeets));       \n        const token = mutationResponse.data.addUser.token;\n        Auth.login(token);\n\n      } catch (error) {\n        console.log(\"error signing up:\", error);\n      }\n    } else {\n      try {\n        const mutationResponse = await login({\n          variables: {\n            email: loginData.email,\n            password: loginData.password,\n          },\n        });\n        console.log(\"MutationResponse:\", mutationResponse.data.login.user._id);\n        const token = mutationResponse.data.login.token;\n        Auth.login(token);\n        const userDeets = mutationResponse.data.login.user\n        localStorage.setItem('deets', JSON.stringify(userDeets));\n        // console.log(\"User Deets:\",mutationResponse.data.login.user);\n        const bbbbb = localStorage.getItem('deets')\n        console.log('local storage deets:', JSON.parse(bbbbb));\n      } catch (error) {\n        console.log(\"Login Failed:\",error);\n      }\n    }\n  };\n\n  const handleSignup = (e) => {\n    setSignupData({ ...signupData, [e.target.name]: e.target.value });\n  };\n  const handleLogin = (e) => {\n    setLoginData({ ...loginData, [e.target.name]: e.target.value });\n  };\n\n  const switchSign = () => {\n    setIsSignup((prevIsSignup) => !prevIsSignup);\n  };\n\n  return (\n    <div className=\"loginContainer\" style={{backgroundImage: \"url(./icons/purpleCity.PNG)\", backgroundPosition: \"right center\", backgroundSize:\"cover\"}}>\n      <h1 className=\"loginTitle\">{isSignup ? \"Sign Up\" : \"Sign In\"}</h1>\n      <form onSubmit={handleSubmit} className=\"loginForm\">\n        {isSignup && (\n          <>\n            <Input\n              placeholder=\"First Name\"\n              handleChange={isSignup ? handleSignup : handleLogin}\n              autoFocus\n              label=\"firstName\"\n              type=\"firstName\"\n            />\n            <Input\n              placeholder=\"Last Name\"\n              handleChange={isSignup ? handleSignup : handleLogin}\n              label=\"lastName\"\n              type=\"lastName\"\n            />\n          </>\n        )}\n\n        <Input\n          placeholder=\"Email Address\"\n          handleChange={isSignup ? handleSignup : handleLogin}\n          label=\"email\"\n          type=\"email\"\n        />\n        <Input\n          placeholder=\"Password\"\n          handleChange={isSignup ? handleSignup : handleLogin}\n          label=\"password\"\n          type=\"password\"\n          autocomplete=\"password\" \n        />\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        {isSignup && (\n          <Input\n            placeholder=\"Repeat Password\"\n            handleChange={isSignup ? handleSignup : handleLogin}\n            label=\"password\"\n            type=\"password\"\n            autocomplete=\"new-password\"\n          />\n        )}\n        <button type=\"submit\" className=\"button\">\n          {isSignup ? \"Sign Up\" : \"Sign In\"}\n        </button>\n        <button onClick={switchSign} type=\"button\" className=\"button\">\n          {isSignup ? \"Already have an account? Sign In\" : \"Create Account\"}\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import { Fragment } from \"react\";\r\nimport Signup from \"../../components/Form/Signup\";\r\nimport \"./SignIn.css\";\r\n\r\nconst SignIn = () => {\r\n  return (\r\n    <Fragment>\r\n      <Signup />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport Store from \"./utils/GobalState\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport Home from \"./pages/Home/Home\";\nimport RoundReport from \"./pages/RoundReport/RoundReport\";\nimport CreateHazard from \"./pages/CreateHazard/CreateHazard\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport SignIn from \"./pages/SignIn/SignIn\";\n\n// using http link with apollo server\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\nfunction App() {\n\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"App\">\n          <Store>\n            <Header />\n            <div className=\"content\">\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/round-report\" component={RoundReport} />\n                <Route exact path=\"/create-hazard\" component={CreateHazard} />\n                <Route exact path=\"/signIn\" component={SignIn} />\n                \n              </Switch>\n            </div>\n            <Footer />\n          </Store>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}